generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model chemistry {
  id          BigInt   @id @unique @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  userId      String   @db.Uuid
  chapterName String
  status      String
  users       users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model maths {
  id          BigInt   @id @unique @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  userId      String   @db.Uuid
  chapterName String
  status      String
  users       users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model physics {
  id          BigInt   @id @unique @default(autoincrement())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  userId      String   @db.Uuid
  chapterName String
  status      String
  users       users    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id         String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime    @default(now()) @db.Timestamptz(6)
  username   String      @default("") @db.VarChar
  chemistry  chemistry[]
  maths      maths[]
  physics    physics[]
}
